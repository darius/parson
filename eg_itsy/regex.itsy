# star_thompsonlike_lowlevel.py ported to C ported to itsy

enum constant {
    loud = 0,
    max_insns = 8192,
    accept = 0,
}

to error(plaint: char@): void {
    fprintf(stderr, "%s\n", plaint);
    exit(1);
}

to dump1(pc: int): void {
    printf("%c %2u: %-4s ", if accepts[pc] {'*'} else {' '}, pc, names[ops[pc]]);
    printf(if pc == accept {"\n"} else if ops[pc] == op_eat {"'%c' %d\n"} else {"%d %d\n"},
           arg1[pc], arg2[pc]);
}

enum opcode {
    op_accept, op_eat, op_fork, op_loop
}

let ninsns: int;
let accepts: uint8[max_insns];
let ops: uint8[max_insns];
let arg1: int[max_insns];
let arg2: int[max_insns];

array names: char@[4] = {   # TODO leave out the 4
    "win", "eat", "fork", "loop",
}

